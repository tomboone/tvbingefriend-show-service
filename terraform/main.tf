data \"azurerm_resource_group\" \"existing\" {\n  name = var.resource_group_name\n}\n\ndata \"azurerm_app_service_plan\" \"existing\" {\n  name                = var.app_service_plan_name\n  resource_group_name = data.azurerm_resource_group.existing.name\n}\n\ndata \"azurerm_mysql_flexible_server\" \"existing\" {\n  name                = var.mysql_server_name\n  resource_group_name = data.azurerm_resource_group.existing.name\n}\n\nresource \"random_string\" \"storage_suffix\" {\n  length  = 8\n  special = false\n  upper   = false\n}\n\nresource \"azurerm_storage_account\" \"main\" {\n  name                     = \"${var.package_name_safe}${random_string.storage_suffix.result}\"\n  resource_group_name      = data.azurerm_resource_group.existing.name\n  location                 = data.azurerm_resource_group.existing.location\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n}\n\nresource \"azurerm_storage_queue\" \"main\" {\n  for_each             = toset(var.storage_queues)\n  name                 = each.key\n  storage_account_name = azurerm_storage_account.main.name\n}\n\nresource \"azurerm_storage_queue\" \"stage\" {\n  for_each             = toset(var.storage_queues)\n  name                 = \"${each.key}-stage\"\n  storage_account_name = azurerm_storage_account.main.name\n}\n\nresource \"azurerm_storage_container\" \"main\" {\n  for_each              = toset(var.storage_containers)\n  name                  = each.key\n  storage_account_name  = azurerm_storage_account.main.name\n  container_access_type = \"private\"\n}\n\nresource \"azurerm_storage_table\" \"main\" {\n  for_each             = toset(var.storage_tables)\n  name                 = each.key\n  storage_account_name = azurerm_storage_account.main.name\n}\n\nresource \"azurerm_storage_table\" \"stage\" {\n  for_each             = toset(var.storage_tables)\n  name                 = \"${each.key}-stage\"\n  storage_account_name = azurerm_storage_account.main.name\n}\n\nresource \"azurerm_application_insights\" \"main\" {\n  name                = var.package_name\n  resource_group_name = data.azurerm_resource_group.existing.name\n  location            = data.azurerm_resource_group.existing.location\n  application_type    = \"web\"\n}\n\nresource \"azurerm_linux_function_app\" \"main\" {\n  name                = var.package_name\n  resource_group_name = data.azurerm_resource_group.existing.name\n  location            = data.azurerm_resource_group.existing.location\n  service_plan_id     = data.azurerm_app_service_plan.existing.id\n\n  storage_account_name       = azurerm_storage_account.main.name\n  storage_account_access_key = azurerm_storage_account.main.primary_access_key\n\n  site_config {\n    application_stack {\n      python_version = \"3.10\"\n    }\n  }\n\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  app_settings = {\n    \"WEBSITE_TIME_ZONE\"                     = \"America/New_York\"\n    \"FUNCTIONS_WORKER_RUNTIME\"              = \"python\"\n    \"APPLICATIONINSIGHTS_CONNECTION_STRING\" = azurerm_application_insights.main.connection_string\n    \"AzureWebJobsStorage\"                   = azurerm_storage_account.main.primary_connection_string\n    \"DB_HOST\"                               = data.azurerm_mysql_flexible_server.existing.fqdn\n    \"DB_NAME\"                               = azurerm_mysql_flexible_server_database.prod.name\n    \"DB_USER\"                               = self.name # The user is the function app's name\n  }\n}\n\nresource \"azurerm_linux_function_app_slot\" \"stage\" {\n  name            = \"stage\"\n  function_app_id = azurerm_linux_function_app.main.id\n\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  site_config {\n    application_stack {\n      python_version = \"3.10\"\n    }\n  }\n\n  app_settings = {\n    # These settings are sticky to the slot by default\n    \"DB_NAME\" = azurerm_mysql_flexible_server_database.stage.name,\n    \"DB_USER\" = self.name,\n    # Override storage resource names for stage\n    \"SHOW_DETAILS_QUEUE\" = \"${var.storage_queues[0]}-stage\",\n    \"SHOW_UPSERT_QUEUE\"  = \"${var.storage_queues[1]}-stage\",\n    \"SHOW_DETAILS_TABLE\" = \"${var.storage_tables[0]}-stage\",\n    # Disable timer triggers in stage by setting a dummy value for their schedule\n    \"TIMER_TRIGGER_SCHEDULE\" = \"disabled\"\n  }\n}\n\nresource \"azurerm_mysql_flexible_server_database\" \"prod\" {\n  name                = var.package_name_db\n  resource_group_name = data.azurerm_resource_group.existing.name\n  server_name         = data.azurerm_mysql_flexible_server.existing.name\n  charset             = \"utf8mb4\"\n  collation           = \"utf8mb4_unicode_ci\"\n}\n\nresource \"azurerm_mysql_flexible_server_database\" \"stage\" {\n  name                = \"${var.package_name_db}-stage\"\n  resource_group_name = data.azurerm_resource_group.existing.name\n  server_name         = data.azurerm_mysql_flexible_server.existing.name\n  charset             = \"utf8mb4\"\n  collation           = \"utf8mb4_unicode_ci\"\n}\n\nresource \"azurerm_mysql_flexible_server_firewall_rule\" \"function_access\" {\n  for_each            = toset(azurerm_linux_function_app.main.possible_outbound_ip_addresses)\n  name                = \"allow-function-outbound-${index(azurerm_linux_function_app.main.possible_outbound_ip_addresses, each.value)}\"\n  resource_group_name = data.azurerm_resource_group.existing.name\n  server_name         = data.azurerm_mysql_flexible_server.existing.name\n  start_ip_address    = each.value\n  end_ip_address      = each.value\n}\n\n# --- IMPORTANT --- #\n# The following step cannot be performed by Terraform and must be run separately\n# after the infrastructure is created. This script grants the function apps'\n# managed identities access to their respective databases.\n# You should run this from a shell where you are logged into Azure (e.g., Azure CLI).\n\n# grant_db_access.sh\n# #!/bin/bash\n# RG_NAME=\"your_resource_group\"\n# MYSQL_SERVER_NAME=\"your_mysql_server\"\n# PROD_DB_NAME=\"tvbingefriend_show_service\"\n# STAGE_DB_NAME=\"tvbingefriend_show_service-stage\"\n# PROD_FUNCTION_NAME=\"tvbingefriend-show-service\"\n# STAGE_FUNCTION_NAME=\"tvbingefriend-show-service/slots/stage\"\n\n# PROD_MI_ID=$(az functionapp identity show --name $PROD_FUNCTION_NAME --resource-group $RG_NAME --query principalId -o tsv)\n# STAGE_MI_ID=$(az functionapp identity show --name $STAGE_FUNCTION_NAME --resource-group $RG_NAME --query principalId -o tsv)\n\n# az mysql flexible-server execute --name $MYSQL_SERVER_NAME --admin-user <your-admin> --admin-password <your-admin-pass> --database-name $PROD_DB_NAME --sql \"DROP USER IF EXISTS '$PROD_FUNCTION_NAME'; CREATE AADUSER '$PROD_FUNCTION_NAME' IDENTIFIED BY '$PROD_MI_ID'; GRANT ALL PRIVILEGES ON \\\`$PROD_DB_NAME\\\`.* TO '$PROD_FUNCTION_NAME'@'%';\"\n# az mysql flexible-server execute --name $MYSQL_SERVER_NAME --admin-user <your-admin> --admin-password <your-admin-pass> --database-name $STAGE_DB_NAME --sql \"DROP USER IF EXISTS '$STAGE_FUNCTION_NAME'; CREATE AADUSER '$STAGE_FUNCTION_NAME' IDENTIFIED BY '$STAGE_MI_ID'; GRANT ALL PRIVILEGES ON \\\`$STAGE_DB_NAME\\\`.* TO '$STAGE_FUNCTION_NAME'@'%';\"\n